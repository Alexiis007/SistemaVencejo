<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BTNCLIENTES" xml:space="preserve">
    <value>Clientes</value>
  </data>
  <data name="BTNCONFUGURACION" xml:space="preserve">
    <value>Configuracion</value>
  </data>
  <data name="BTNEMPLEADOS" xml:space="preserve">
    <value>Inventarios</value>
  </data>
  <data name="BTNPRODUCTOS" xml:space="preserve">
    <value>Empleados</value>
  </data>
  <data name="BTNTEMA" xml:space="preserve">
    <value>Aplicar Tema</value>
  </data>
  <data name="BTNVENTAS" xml:space="preserve">
    <value>Trabajos</value>
  </data>
  <data name="btn_Actualizar" xml:space="preserve">
    <value>Actualizar</value>
  </data>
  <data name="btn_Eliminar" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="btn_EliminarEmpleado" xml:space="preserve">
    <value>Procesar Empleado</value>
  </data>
  <data name="btn_FiltrarAuto" xml:space="preserve">
    <value>Filtrar Autos</value>
  </data>
  <data name="btn_FiltrarCliente" xml:space="preserve">
    <value>Filtrar Clientes</value>
  </data>
  <data name="btn_FiltrarEmpleado" xml:space="preserve">
    <value>Filtrar Empleados</value>
  </data>
  <data name="btn_FiltrarObjeto" xml:space="preserve">
    <value>Filtrar</value>
  </data>
  <data name="btn_FinalizarTrabajo" xml:space="preserve">
    <value>Finalizar trabajo</value>
  </data>
  <data name="btn_GenerarTrabajo" xml:space="preserve">
    <value>Generar trabajo</value>
  </data>
  <data name="btn_IngresarAuto" xml:space="preserve">
    <value>Ingresar Auto</value>
  </data>
  <data name="btn_ingresarCliente" xml:space="preserve">
    <value>Ingresar Cliente</value>
  </data>
  <data name="btn_ingresarEmpleado" xml:space="preserve">
    <value>Ingresar Empleado</value>
  </data>
  <data name="btn_IngresarObjeto" xml:space="preserve">
    <value>Ingresar objeto</value>
  </data>
  <data name="CONFPREV" xml:space="preserve">
    <value>Vista Previa</value>
  </data>
  <data name="CONFSEL" xml:space="preserve">
    <value>Seleccionar</value>
  </data>
  <data name="GB_ActualizarObjeto" xml:space="preserve">
    <value>Actualizar registro.</value>
  </data>
  <data name="GB_EliminarEmpleado" xml:space="preserve">
    <value>Dar de baja a empleado.</value>
  </data>
  <data name="GB_EliminarObjeto" xml:space="preserve">
    <value>Eliminar objeto.</value>
  </data>
  <data name="GB_FiltrarAutos" xml:space="preserve">
    <value>Filtrar autos por:</value>
  </data>
  <data name="GB_FiltrarClientes" xml:space="preserve">
    <value>Filtrar clientes por:</value>
  </data>
  <data name="GB_FiltrarEmpleado" xml:space="preserve">
    <value>Filtrar empleados por:</value>
  </data>
  <data name="GB_FiltrarObjeto" xml:space="preserve">
    <value>Filtrar objetos por:</value>
  </data>
  <data name="GB_GenerarTrabajo" xml:space="preserve">
    <value>Generar un nuevo trabajo.</value>
  </data>
  <data name="GB_IngresoAutos" xml:space="preserve">
    <value>Ingresar un nuevo auto al cliente.</value>
  </data>
  <data name="GB_IngresoClientes" xml:space="preserve">
    <value>Ingresar un nuevo cliente.</value>
  </data>
  <data name="GB_IngresoDeDatos" xml:space="preserve">
    <value>Ingresar un nuevo empleado.</value>
  </data>
  <data name="GB_IngresoObjetos" xml:space="preserve">
    <value>Ingresar un nuevo objeto.</value>
  </data>
  <data name="GB_TerminarTrabajo" xml:space="preserve">
    <value>Terminar trabajo.</value>
  </data>
  <data name="lbl_ActualizarCantidad" xml:space="preserve">
    <value>Actualizar cantidad</value>
  </data>
  <data name="lbl_ActualizarCostoUnidad" xml:space="preserve">
    <value>Actualizar costo por unidad</value>
  </data>
  <data name="lbl_ActualizarIdObjeto" xml:space="preserve">
    <value>ID del objeto a actualizar</value>
  </data>
  <data name="lbl_ActualizarNombreObjeto" xml:space="preserve">
    <value>Actualizar nombre del objeto</value>
  </data>
  <data name="lbl_ApMaterno" xml:space="preserve">
    <value>Apellido Materno</value>
  </data>
  <data name="lbl_ApPaterno" xml:space="preserve">
    <value>Apellido Paterno</value>
  </data>
  <data name="lbl_AutoDelCliente" xml:space="preserve">
    <value>Auto del cliente</value>
  </data>
  <data name="lbl_AutosVencejoPIN" xml:space="preserve">
    <value>VencejoPIN</value>
  </data>
  <data name="lbl_BienvenidoA" xml:space="preserve">
    <value>Bienvenido a</value>
  </data>
  <data name="lbl_Cantidad" xml:space="preserve">
    <value>Cantidad</value>
  </data>
  <data name="lbl_Correo" xml:space="preserve">
    <value>Correo</value>
  </data>
  <data name="lbl_CostoDelTrabajo" xml:space="preserve">
    <value>Costo del trabajo</value>
  </data>
  <data name="lbl_CostoUnidad" xml:space="preserve">
    <value>Costo por unidad</value>
  </data>
  <data name="lbl_DescripcionDelTrabajo" xml:space="preserve">
    <value>Descripcion del trabajo</value>
  </data>
  <data name="lbl_Edad" xml:space="preserve">
    <value>Edad</value>
  </data>
  <data name="lbl_EliminarIdEmpledo" xml:space="preserve">
    <value>ID Empleado</value>
  </data>
  <data name="lbl_EliminarIdObjeto" xml:space="preserve">
    <value>ID del objeto a eliminar</value>
  </data>
  <data name="lbl_EliminarNombreObjeto" xml:space="preserve">
    <value>Nombre del objeto a eliminar</value>
  </data>
  <data name="lbl_EliminarPrimerAp" xml:space="preserve">
    <value>Apellido Paterno</value>
  </data>
  <data name="lbl_EliminarPrimerNom" xml:space="preserve">
    <value>Primer Nombre</value>
  </data>
  <data name="lbl_EmpleadoEncargado" xml:space="preserve">
    <value>Empleado encargado</value>
  </data>
  <data name="lbl_FiltrarApPaterno" xml:space="preserve">
    <value>Apellido Paterno</value>
  </data>
  <data name="lbl_FiltrarIdObjeto" xml:space="preserve">
    <value>ID del objeto a filtrar</value>
  </data>
  <data name="lbl_FiltrarMatricula" xml:space="preserve">
    <value>Matricula</value>
  </data>
  <data name="lbl_FiltrarModelo" xml:space="preserve">
    <value>Modelo </value>
  </data>
  <data name="lbl_FiltrarNombreObjeto" xml:space="preserve">
    <value>Nombre del objeto a filtrar</value>
  </data>
  <data name="lbl_FiltrarPrimerAp" xml:space="preserve">
    <value>Apellido Paterno</value>
  </data>
  <data name="lbl_FiltrarPrimerNom" xml:space="preserve">
    <value>Primer Nombre</value>
  </data>
  <data name="lbl_FiltrarPuesto" xml:space="preserve">
    <value>Puesto</value>
  </data>
  <data name="lbl_FiltrarssIdEmpleado" xml:space="preserve">
    <value>ID Empleado</value>
  </data>
  <data name="lbl_FiltrarVencejoPIN" xml:space="preserve">
    <value>VencejoPIN</value>
  </data>
  <data name="lbl_Idtrabajo" xml:space="preserve">
    <value>ID del trabajo</value>
  </data>
  <data name="lbl_Marca" xml:space="preserve">
    <value>Marca</value>
  </data>
  <data name="lbl_Matricula" xml:space="preserve">
    <value>Matricula</value>
  </data>
  <data name="lbl_Modelo" xml:space="preserve">
    <value>Modelo</value>
  </data>
  <data name="lbl_NombreObjeto" xml:space="preserve">
    <value>Nombre del objeto</value>
  </data>
  <data name="lbl_NumeroTelefonico" xml:space="preserve">
    <value>Numero Telefonico</value>
  </data>
  <data name="lbl_PrimerAp" xml:space="preserve">
    <value>Apellido Paterno</value>
  </data>
  <data name="lbl_PrimerNom" xml:space="preserve">
    <value>Primer Nombre</value>
  </data>
  <data name="lbl_Puesto" xml:space="preserve">
    <value>Puesto</value>
  </data>
  <data name="lbl_SegundoAp" xml:space="preserve">
    <value>Apellido Materno</value>
  </data>
  <data name="lbl_SegundoNom" xml:space="preserve">
    <value>Segundo Nombre</value>
  </data>
  <data name="lbl_Telefono" xml:space="preserve">
    <value>Numero Telefonico</value>
  </data>
  <data name="lbl_TituloClientes" xml:space="preserve">
    <value>Clientes</value>
  </data>
  <data name="lbl_TituloEmpleados" xml:space="preserve">
    <value>Empleados</value>
  </data>
  <data name="lbl_TituloInventarios" xml:space="preserve">
    <value>Inventarios</value>
  </data>
  <data name="lbl_TituloTrabajos" xml:space="preserve">
    <value>Generar Trabajos</value>
  </data>
  <data name="lbl_usuario" xml:space="preserve">
    <value>Usuario:</value>
  </data>
  <data name="lbl_VencejoPIN" xml:space="preserve">
    <value>VencejoPIN</value>
  </data>
  <data name="MENSAJESALIR" xml:space="preserve">
    <value>¿Desea salir?</value>
  </data>
  <data name="TOOLAYUDA" xml:space="preserve">
    <value>Ayuda</value>
  </data>
  <data name="TOOLCERRAR" xml:space="preserve">
    <value>Cerrar Sesión</value>
  </data>
  <data name="TOOLINFO" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="TOOLINICIO" xml:space="preserve">
    <value>Inicio</value>
  </data>
</root>